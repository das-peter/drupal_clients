<?php
/**
 * @file
 * Install, update and uninstall functions for the Clients module.
 */

/**
 * Implementation of hook_install().
 */
function clients_install() {
  drupal_install_schema('clients');
}

/**
 * Implementation of hook_uninstall().
 */
function clients_uninstall() {
  drupal_uninstall_schema('clients');

  // clean up any variables created by module
  $module_variables = array(

  );
  foreach ($module_variables as $module_variable) {
    variable_del($module_variables);
  }

}

/**
 * Implementation of hook_schema
 */
function clients_schema() {
  $schema['cache_clients'] = drupal_get_schema_unprocessed('system', 'cache');

  $schema['clients_connections'] = array(
    'description' => 'Stores service connection configurations',
    // CTools exportables support:
    'export' => array(
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'cid',
      'identifier' => 'connection', // Exports will be as $myobj
      'default hook' => 'clients_default_connections',  // Function hook name.
      'export type string' => 'export_type_label',
      'object factory' => 'clients_connection_unpack_object',
      'export callback' => 'clients_export_object',
      'api' => array(
        'owner' => 'clients',
        'api' => 'clients',  // Base name for api include files.
        'minimum_version' => 3,
        'current_version' => 3,
      ),
    ),
    'fields' => array(
      'cid' => array(
        'description' => 'The primary identifier for a service connection.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'no export' => TRUE, // CTools: do not export database-only keys.
      ),
      'name' => array(
        'description' => 'Connection name, must be unique',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'Connection type',
        'type' => 'varchar',
        'length' => 100,
      ),
      'endpoint' => array(
        'description' => 'Connection endpoint',
        'type' => 'varchar',
        'length' => 100,
      ),
      'configuration' => array(
        'description' => 'Connection configuration - serialized',
        'serialize' => TRUE,
        'size' => 'big',
        'type' => 'text',
      ),
    ),
    'unique keys' => array(
      'name' => array('name'),
      ),
    'primary key' => array('cid'),
  );

  $schema['clients_resources'] = array(
    'description' => 'Stores service configurations - these are used as resources to clients',
    'fields' => array(
      'rid' => array(
        'description' => 'The primary identifier for a resource.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Resource name, must be unique',
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
      ),
      'cid' => array(
        'description' => 'Foreign key referencing {clients_connections}',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'configuration' => array(
        'description' => 'Resource configuration - serialized',
        'serialize' => TRUE,
        'size' => 'big',
        'type' => 'text',
      ),
    ),
    'unique keys' => array(
      'name' => array('name'),
      ),
    'primary key' => array('rid'),
  );


  return $schema;
}
