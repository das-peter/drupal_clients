<?php
// $Id$

/**
 * Implementation of hook_client()
 */
function example_client_client() {
  return array(
    'example_service' => array(
      // Title of the service.
      '#title' => t('Example service'),
      '#description' => t('SOAP service providing widgets.'),
      '#methods' => array(
        // Some standard methods that may be present for all clients.
        // Routine to call to initialize and return the client.
        '#init' => 'example_client_init',
        // Fetch a client instance.
        '#get_client' => 'example_client_get_client',
        // Custom methods specific to the service.
        'widget_create' => array(
          '#title' => t('Create widget'),
          '#callback' => 'example_client_create_widget',
        ),
      ),
      // An array of entity types exposed by the service.
      '#entities' => array(
        'example' => array(
          '#title' => t('Tidget'),
          // Methods expected to be implemented by all services.
          '#methods' => array(
            '#load_entity' => 'example_client_load_instance',
            '#save_entity' => 'example_client_save_instance',
            '#get_field' => 'example_client_get_field',
            '#set_field' => 'example_client_set_field',
          ),
          // Specific entity properties to be exposed as fields.
          '#fields' => array(
            'name' => array(
              '#title' => t('Name'),
            ),
            'description' => array(
              '#title' => t('Description'),
            ),
          ),
        ),
      ),
    ),
  );
}

/**
 * Initialize the client.
 */
function example_client_init_client() {
  $path = drupal_get_path('module', 'example_client');
  // require_once ($path .'/example-proxy/example.php');
}

/**
 * Returns a specified node.
 */
function example_client_load_instance($id) {

}
